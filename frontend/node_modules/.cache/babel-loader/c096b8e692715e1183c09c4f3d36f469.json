{"ast":null,"code":"var _jsxFileName = \"/home/vboxuser/linealert-direct-connect/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nfunction App() {\n  const [driftData, setDriftData] = useState([]);\n  const [filter, setFilter] = useState('All');\n\n  // Function to classify severity based on change percentage\n  const classifySeverity = change => {\n    if (change > 30) {\n      return \"Bad\"; // Flag as Bad if change is greater than 30%\n    } else if (change >= 10) {\n      return \"Moderate\"; // Flag as Moderate if change is between 10% and 30%\n    } else {\n      return \"Low\"; // Flag as Low if change is less than 10%\n    }\n  };\n\n  // Fetch drift data\n  const fetchData = async () => {\n    try {\n      const driftResponse = await axios.get('http://localhost:5007/drift');\n      // Add severity to each entry based on the change value\n      const updatedDriftData = driftResponse.data.map(entry => ({\n        ...entry,\n        severity: classifySeverity(entry.change) // Classify severity\n      }));\n      setDriftData(updatedDriftData);\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n    }\n  };\n\n  // Set up interval to fetch data periodically\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(() => {\n      fetchData();\n    }, 5000); // Refresh every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Filter data based on severity\n  const filteredData = driftData.filter(data => {\n    if (filter === 'All') return true;\n    return data.severity === filter;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"LineAlert Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setFilter('All'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"All Data\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setFilter('Low'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Low Severity\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setFilter('Moderate'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Moderate Severity\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setFilter('Bad'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Bad Severity\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Drift Data\"), filteredData.length > 0 ? filteredData.map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Tag: \", data.tag), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Value: \", data.value), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Severity: \", data.severity), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Change: \", data.change.toFixed(2), \"%\"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Timestamp: \", data.timestamp || 'No Timestamp Available'), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"No Drift Data Available\")));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","axios","App","driftData","setDriftData","filter","setFilter","classifySeverity","change","fetchData","driftResponse","get","updatedDriftData","data","map","entry","severity","error","console","interval","setInterval","clearInterval","filteredData","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","index","key","tag","value","toFixed","timestamp"],"sources":["/home/vboxuser/linealert-direct-connect/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [driftData, setDriftData] = useState([]);\n  const [filter, setFilter] = useState('All');\n\n  // Function to classify severity based on change percentage\n  const classifySeverity = (change) => {\n    if (change > 30) {\n      return \"Bad\";  // Flag as Bad if change is greater than 30%\n    } else if (change >= 10) {\n      return \"Moderate\";  // Flag as Moderate if change is between 10% and 30%\n    } else {\n      return \"Low\";  // Flag as Low if change is less than 10%\n    }\n  };\n\n  // Fetch drift data\n  const fetchData = async () => {\n    try {\n      const driftResponse = await axios.get('http://localhost:5007/drift');\n      // Add severity to each entry based on the change value\n      const updatedDriftData = driftResponse.data.map(entry => ({\n        ...entry,\n        severity: classifySeverity(entry.change)  // Classify severity\n      }));\n      setDriftData(updatedDriftData);\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n    }\n  };\n\n  // Set up interval to fetch data periodically\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(() => {\n      fetchData();\n    }, 5000); // Refresh every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Filter data based on severity\n  const filteredData = driftData.filter((data) => {\n    if (filter === 'All') return true;\n    return data.severity === filter;\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>LineAlert Dashboard</h1>\n\n      {/* Filter Options */}\n      <div>\n        <button onClick={() => setFilter('All')}>All Data</button>\n        <button onClick={() => setFilter('Low')}>Low Severity</button>\n        <button onClick={() => setFilter('Moderate')}>Moderate Severity</button>\n        <button onClick={() => setFilter('Bad')}>Bad Severity</button>\n      </div>\n\n      {/* Drift Data Display */}\n      <div>\n        <h2>Drift Data</h2>\n        {filteredData.length > 0 ? (\n          filteredData.map((data, index) => (\n            <div key={index}>\n              <p>Tag: {data.tag}</p>\n              <p>Value: {data.value}</p>\n              <p>Severity: {data.severity}</p>\n              <p>Change: {data.change.toFixed(2)}%</p> {/* Display percentage with two decimals */}\n              <p>Timestamp: {data.timestamp || 'No Timestamp Available'}</p>\n              <hr />\n            </div>\n          ))\n        ) : (\n          <p>No Drift Data Available</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}